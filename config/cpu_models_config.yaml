# CPU Lightweight Models Configuration

# Model configurations for CPU-optimized lightweight models
models:
  catboost:
    task_type: 'CPU'
    iterations: 1000
    depth: 8
    learning_rate: 0.03
    l2_leaf_reg: 3
    random_strength: 1.0
    border_count: 128
    leaf_estimation_iterations: 10
    auto_class_weights: 'Balanced'
    verbose: false
    
  lightgbm:
    num_leaves: 31
    max_depth: 8
    learning_rate: 0.03
    n_estimators: 1000
    feature_fraction: 0.8
    bagging_fraction: 0.8
    bagging_freq: 5
    min_data_in_leaf: 20
    min_sum_hessian_in_leaf: 1e-3
    lambda_l1: 0.1
    lambda_l2: 0.1
    device: 'cpu'
    verbosity: -1
    random_state: 42
    
  tabnet:
    n_d: 8
    n_a: 8
    n_steps: 3
    gamma: 1.3
    n_independent: 2
    n_shared: 2
    lambda_sparse: 1e-3
    optimizer_fn: 'Adam'
    optimizer_params:
      lr: 0.02
    scheduler_params:
      step_size: 10
      gamma: 0.9
    scheduler_fn: 'StepLR'
    mask_type: 'entmax'
    
  autogluon:
    time_limit: 600
    presets: 'medium_quality'
    eval_metric: 'accuracy'
    num_trials: 10
    hyperparameter_tune_kwargs:
      num_trials: 10
      scheduler: 'local'
      searcher: 'auto'
    
# Training configuration
training:
  window_size: 1000
  train_split: 0.70
  val_split: 0.15
  test_split: 0.15
  batch_size: 256
  random_state: 42
  
  # Early stopping
  early_stopping:
    enabled: true
    patience: 50
    min_delta: 0.001
    
  # Cross-validation
  cross_validation:
    enabled: true
    cv_folds: 5
    shuffle: true
    
# Hyperparameter tuning configuration
hyperparameter_tuning:
  n_trials: 50
  timeout: 3600
  cv_folds: 5
  optimization_metric: 'accuracy'
  
  # Optuna settings
  optuna:
    study_name_prefix: 'cpu_models'
    storage: null  # Use in-memory storage
    load_if_exists: false
    
  # Search spaces for each model
  search_spaces:
    lightgbm:
      num_leaves:
        min: 10
        max: 100
        type: 'int'
      max_depth:
        min: 3
        max: 15
        type: 'int'
      learning_rate:
        min: 0.01
        max: 0.3
        type: 'float'
      feature_fraction:
        min: 0.5
        max: 1.0
        type: 'float'
      bagging_fraction:
        min: 0.5
        max: 1.0
        type: 'float'
      bagging_freq:
        min: 1
        max: 10
        type: 'int'
      min_data_in_leaf:
        min: 10
        max: 50
        type: 'int'
      lambda_l1:
        min: 0.0
        max: 1.0
        type: 'float'
      lambda_l2:
        min: 0.0
        max: 1.0
        type: 'float'
        
    catboost:
      iterations:
        min: 500
        max: 2000
        type: 'int'
      depth:
        min: 4
        max: 12
        type: 'int'
      learning_rate:
        min: 0.01
        max: 0.3
        type: 'float'
      l2_leaf_reg:
        min: 1
        max: 10
        type: 'float'
      random_strength:
        min: 0.5
        max: 2.0
        type: 'float'
        
    tabnet:
      n_d:
        min: 4
        max: 16
        type: 'int'
      n_a:
        min: 4
        max: 16
        type: 'int'
      n_steps:
        min: 2
        max: 6
        type: 'int'
      gamma:
        min: 1.0
        max: 2.0
        type: 'float'
      n_independent:
        min: 1
        max: 4
        type: 'int'
      n_shared:
        min: 1
        max: 4
        type: 'int'

# Data processing configuration
data_processing:
  # Feature engineering
  feature_engineering:
    window_sizes: [50, 200, 500, 1000]
    include_sequences: true
    normalize_features: true
    log_transform_sequences: true
    
  # Data cleaning
  data_cleaning:
    remove_outliers: true
    outlier_threshold: 3.0
    handle_missing: 'drop'
    unicode_cleaning: true
    
  # Class balancing
  class_balancing:
    enabled: true
    method: 'weighted'
    target_ratio: 0.3  # Target ratio for minority class

# Virtual bankroll simulation
virtual_bankroll:
  initial_amount: 10000
  bet_amount: 10
  win_multiplier: 1.5
  exit_strategies:
    - name: 'fixed_threshold'
      threshold: 1.5
    - name: 'percentage_exit'
      percentage: 0.8
    - name: 'confidence_based'
      min_confidence: 0.8

# Model evaluation metrics
evaluation:
  metrics:
    classification:
      - 'accuracy'
      - 'precision'
      - 'recall'
      - 'f1_score'
      - 'auc'
      - 'virtual_bankroll_roi'
    regression:
      - 'mae'
      - 'mse'
      - 'rmse'
      - 'r2'
      - 'mape'
    multiclass:
      - 'accuracy'
      - 'precision_weighted'
      - 'recall_weighted'
      - 'f1_weighted'
      
  # Thresholds for evaluation
  thresholds:
    binary_classification: 0.5
    virtual_bankroll: 1.5
    
# Logging configuration
logging:
  level: 'INFO'
  format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  file: 'data/cpu_models.log'
  
# Model persistence
model_persistence:
  models_dir: 'models/cpu'
  registry_file: 'model_registry.json'
  backup_enabled: true
  backup_frequency: 'daily'
  
# Performance monitoring
performance:
  memory_monitoring: true
  cpu_monitoring: true
  training_time_limit: 7200  # 2 hours
  prediction_time_limit: 60  # 1 minute
  
# UI configuration
ui:
  theme: 'light'
  page_title: 'CPU Lightweight Models'
  page_icon: 'ðŸš€'
  layout: 'wide'
  sidebar_state: 'expanded'
  
  # Progress tracking
  progress:
    update_frequency: 1  # seconds
    show_eta: true
    show_percentage: true
    
  # Visualization
  visualization:
    plot_theme: 'plotly_white'
    color_scheme: 'viridis'
    figure_size:
      width: 800
      height: 600
